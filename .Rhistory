View(df3_diff)
df3_diff <- df3 %>% mutate(diffSpend = if_else(ASSIGNED_DISPLAY_AD == 1, CART_TOTAL - CART_TOTAL_Y1, CART_TOTAL - CART_TOTAL_Y0))
df3_diff <- df3 %>% mutate(diffSpend = if_else(ATTRIB_DISPLAY_AD == 1, CART_TOTAL - CART_TOTAL_Y1, CART_TOTAL - CART_TOTAL_Y0))
df3_diff %>% sum(diffSpend)
df3_diff %>% sum(diffSpend)
sum(df3_diff$diffSpend)
df3_diff <- df3 %>% mutate(diffSpend = CART_TOTAL_Y1 - CART_TOTAL_Y0)
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>% summarise(MUDIFF = mean(diffSpend), N = n())
df %>%
group_by(ATTRIB_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL), N=n())
%>% summarise(MUTOTAL = mean(CART_TOTAL), MUDIFF = mean(diffSpend), N = n())
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL = mean(CART_TOTAL), MUDIFF = mean(diffSpend), N = n())
df3_diff <- df3 %>% mutate(diffSpend =
if_else(ATTRIB_DISPLAY_AD == 1, CART_TOTAL - CART_TOTAL_Y0), CART_TOTAL_Y1 - CART_TOTAL))
df3_diff <- df3 %>% mutate(diffSpend = if_else(ATTRIB_DISPLAY_AD == 1, CART_TOTAL - CART_TOTAL_Y0, CART_TOTAL_Y1 - CART_TOTAL))
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL = mean(CART_TOTAL), MUDIFF = mean(diffSpend), N = n())
df3_diff <- df3 %>% mutate(diffSpend = if_else(ATTRIB_DISPLAY_AD == 1, CART_TOTAL - CART_TOTAL_Y0, CART_TOTAL_Y1 - CART_TOTAL),
diffSpend2 = CART_TOTAL_Y1 - CART_TOTAL_Y0)
df3_diff <- df3 %>% mutate(diffSpend = if_else(ATTRIB_DISPLAY_AD == 1, CART_TOTAL - CART_TOTAL_Y0, CART_TOTAL_Y1 - CART_TOTAL))
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL = mean(CART_TOTAL), MUDIFF = mean(diffSpend), N = n())
lm(diffSpend ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff) %>% summary()
View(df3_diff)
df2 <- m2 %>%
as_tibble()
df2<-df%>%
filter(ASSIGNED_DISPLAY_AD==1)
df2
df2<-df%>%
filter(ASSIGNED_DISPLAY_AD==1)
df2 <- m2 %>%
as_tibble()
df2<-df%>%
filter(ASSIGNED_DISPLAY_AD==1)
View(df2)
df2<-df2%>%
filter(ASSIGNED_DISPLAY_AD==1)
df2
#
df2 %>%
group_by(ATTRIB_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL), N=n())
lm(CART_TOTAL ~ ATTRIB_DISPLAY_AD, data = df2)
roi * 100
# ROI = (AMOUNT MADE - AMOUNT SPENT) / AMOUNT SPENT
# AMOUNT SPENT = $10K
amount_made <- 58.89 * 739
amount_spent <- 10000
roi <- (amount_made - amount_spent) / amount_spent
roi * 100
roi *100
amount_made <- 27 * 739
amount_spent <- 10000
roi <- (amount_made - amount_spent) / amount_spent
roi *100
lm1 <- lm(CART_TOTAL_Y1 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y0, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm1)
lm2 <- lm(CART_TOTAL_Y0 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y1, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm2)
lm1 <- lm(CART_TOTAL_Y1 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y0, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm1)
lm1
summary(lm1)
lm1
summary(lm1)
lm2 <- lm(CART_TOTAL_Y0 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y1, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm2)
lm3 <- lm(CART_TOTAL ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3)
summary(lm3)
summary(lm3)
f$yhat <- predict(lm3, df3_diff)
df3_diff$yhat <- predict(lm3, df3_diff)
View(df3_diff)
lm3 <- lm(CART_TOTAL ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3_diff)
summary(lm3)
df3_diff$yhat <- predict(lm3, df3_diff)
lm3 <- lm(spendDiff ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3_diff)
summary(lm3)
df3_diff$yhat <- predict(lm3, df3_diff)
lm4 <- lm(CART_TOTAL ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3_diff)
summary(lm4)
df3_diff$yhat2 <- predict(lm4, df3_diff)
lm3 <- lm(spendDiff ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3_diff)
summary(lm3)
lm4 <- lm(CART_TOTAL ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3_diff)
summary(lm4)
lm2 <- lm(CART_TOTAL_Y0 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y1, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm2)
lm3 <- lm(spendDiff ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3_diff)
summary(lm3)
lm1 <- lm(CART_TOTAL_Y1 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y0, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm1)
lm2 <- lm(CART_TOTAL_Y0 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y1, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm2)
lm3 <- lm(CART_TOTAL ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3_diff)
summary(lm3)
df3_diff$yhat <- predict(lm3, df3_diff)
df3_diff %>% drop(yhat2)
df3_diff %>% drop('yhat2')
df3_diff$yhat2 <- NULL
lm1 <- lm(CART_TOTAL_Y1 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y0, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm1)
f3_diff$diff_fac[df3_diff$spendDiff <= 0]<-"negative effect"
df3_diff$diff_fac[df3_diff$spendDiff > 0]<-"positive effect"
df3_diff$diff_fac[df3_diff$diffSpend <= 0]<-"negative effect"
df3_diff$diff_fac[df3_diff$diffSpend <= 0]<-"negative effect"
df3_diff$diff_fac[df3_diff$diffSpend > 0]<-"positive effect"
freqtable <- table(df3_diff$diff_fac)
df <- as.data.frame.table(freqtable)
df_freq <- as.data.frame.table(freqtable)
ggplot(df, aes(Var1, Freq)) + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Frequency of Manufacturers from 'mpg' dataset") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
View(df_freq)
ggplot(df, aes(Var1, Freq)) + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Ads True Effect on Cutomers", x = 'Difference in Money Spend', y = 'Counts') +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
ggplot(df, aes(Var1, Freq)) + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Ads True Effect on Cutomers", x = 'Difference in Money Spend', y = 'Counts') +
theme(axis.text.x = element_text(angle=180, vjust=0.6))
ggplot(df, aes(Var1, Freq)) + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Ads True Effect on Cutomers", x = 'Difference in Money Spend', y = 'Counts') +
theme(axis.text.x = element_text(angle=0, vjust=0.6))
df3_diff$diff_fac[df3_diff$diffSpend <= 0]<-"negative money spend"
df3_diff$diff_fac[df3_diff$diffSpend > 0]<-"positive money spend"
freqtable <- table(df3_diff$frac)
df_freq <- as.data.frame.table(freqtable)
View(df_freq)
View(df3)
# charts
df3_diff$diff_fac[df3_diff$diffSpend <= 0]<-"negative money spend"
df3_diff$diff_fac[df3_diff$diffSpend > 0]<-"positive money spend"
View(df3_diff)
freqtable <- table(df3_diff$diff_fac)
df_freq <- as.data.frame.table(freqtable)
View(df_freq)
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
fig <- plot_ly(df3_diff, labels = ~Var1, values = ~Freq, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', X1960, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly(df3_diff, labels = ~Var1, values = ~Freq, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', X1960, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
library(plotly)
fig <- plot_ly(df3_diff, labels = ~Var1, values = ~Freq, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', X1960, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly(df3_freq, labels = ~Var1, values = ~Freq, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', X1960, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- plot_ly(df3_freq, labels = ~Var1, values = ~Freq, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', X1960, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- plot_ly(df_freq, labels = ~Var1, values = ~Freq, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', X1960, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly(df_freq, labels = ~Var1, values = ~Freq, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Freq, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- fig %>% layout(title = 'True Effect on Cutomers Spend'),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly(df_freq, labels = ~Var1, values = ~Freq, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Freq, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'True Effect on Cutomers Spend'),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig <- fig %>% layout(title = 'True Effect on Cutomers Spend',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
amount_made <- 58.9 * 739
amount_spent <- 10000
roi <- (amount_made - amount_spent) / amount_spent
roi * 100
amount_made <- 15 * 739
amount_spent <- 10000
roi <- (amount_made - amount_spent) / amount_spent
roi *100
df %>%
group_by(ATTRIB_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL), N=n())
df <- m1 %>%
as_tibble()
df %>%
group_by(ATTRIB_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL), N=n())
lm1 <- lm(CART_TOTAL_Y1 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y0, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm1)
lm3 <- lm(CART_TOTAL ~ PREVIOUS_CHECKOUTS + PAGE_VIEWS + ESTIMATED_INCOME_DECILE + PRODUCT_VIEWS, data=df3_diff)
summary(lm3)
lm1 <- lm(CART_TOTAL_Y1 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y0, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm1)
lm(CART_TOTAL ~ ATTRIB_DISPLAY_AD - 1 , data = df) %>%
summary()
df %>%
group_by(ATTRIB_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL), N=n())
m2 <- read.csv('/Users/zejiachen/Desktop/fall 2021/QTM 385, Data Analytics/Performance Managment /ecomm_performance_data/milestone-2/ecomm_rev_2020_incl_assn.csv')
df2 <- m2 %>%
as_tibble()
df %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL), N=n())
df2 %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL), N=n())
lm(CART_TOTAL ~ ASSIGNED_DISPLAY_AD, data = df)
lm(CART_TOTAL ~ ASSIGNED_DISPLAY_AD, data = df2)
lm(CART_TOTAL ~ ASSIGNED_DISPLAY_AD - 1, data = df2)
lm(CART_TOTAL ~ ATTRIB_DISPLAY_AD - 1 , data = df) %>%
summary()
lm1 <- lm(CART_TOTAL_Y1 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y0, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
summary(lm1)
lm4 <- lm(CART_TOTAL_Y1 ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
summary(lm4)
lm4
lm4 <- lm(CART_TOTAL_Y0 ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
lm4
lm5 <- lm(CART_TOTAL_Y0 ~ ASSIGNED_DISPLAY_AD - 1, data = df3_diff)
lm5
lm5 <- lm(CART_TOTAL_Y1 ~ ASSIGNED_DISPLAY_AD - 1, data = df3_diff)
lm5
lm4 <- lm(spendDiff ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
lm4
lm5 <- lm(spendDiff ~ ASSIGNED_DISPLAY_AD - 1, data = df3_diff)
lm5
lm1 <- lm(CART_TOTAL_Y1 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y0, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
lm1
lm2 <- lm(CART_TOTAL_Y0 ~ ., df3 %>% select(-CUSTID, -CART_TOTAL_Y1, -CART_TOTAL, -ASSIGNED_DISPLAY_AD, -ATTRIB_DISPLAY_AD))
lm2
lm4 <- lm(CART_TOTAL_Y1 ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
lm4
lm5 <- lm(CART_TOTAL_Y1 ~ ASSIGNED_DISPLAY_AD - 1, data = df3_diff)
lm5
lm4 <- lm(CART_TOTAL_Y0 ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
lm4
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL = mean(CART_TOTAL), MUDIFF = mean(diffSpend), N = n())
milestone1_Y1 <- lm(CART_TOTAL_Y1 ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
milestone1_Y1
milestone1_Y0 <- lm(CART_TOTAL_Y0 ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
milestone1_Y0
milestone2_Y1 <- lm(CART_TOTAL_Y1 ~ ASSIGNED_DISPLAY_AD - 1, data = df3_diff)
milestone2_Y1
milestone2_Y0 <- lm(CART_TOTAL_Y0 ~ ASSIGNED_DISPLAY_AD - 1, data = df3_diff)
milestone2_Y0
milestone1_Y1 <- lm(CART_TOTAL_Y1 ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
milestone1_Y1
milestone1_Y0 <- lm(CART_TOTAL_Y0 ~ ATTRIB_DISPLAY_AD - 1, data = df3_diff)
milestone1_Y0
ASSIGN_Y1 <- lm(CART_TOTAL_Y1 ~ ASSIGNED_DISPLAY_AD - 1, data = df3_diff)
ASSIGN_Y1
ASSIGN_Y2 <- lm(CART_TOTAL_Y0 ~ ASSIGNED_DISPLAY_AD - 1, data = df3_diff)
ASSIGN_Y2
df3_diff %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(spendDiff), N=n())
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL = mean(CART_TOTAL), MUDIFF = mean(diffSpend), N = n())
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUDIFF = mean(diffSpend), N = n())
df3_diff %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUDIFF=mean(spendDiff), N=n())
df3_diff %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUDIFF=mean(diffSpend), N=n())
df3_diff %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL), MUDIFF=mean(diffSpend), N=n())
df3_diff %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUTOTAL=mean(CART_TOTAL_Y1), MUDIFF=mean(diffSpend), N=n())
df3_diff %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUTOTAL_Y1=mean(CART_TOTAL_Y1), ,MUTOTAL_Y0=mean(CART_TOTAL_Y0), MUDIFF=mean(diffSpend), N=n())
df3_diff %>%
group_by(ASSIGNED_DISPLAY_AD) %>%
summarize(MUTOTAL_Y1=mean(CART_TOTAL_Y1), MUTOTAL_Y0=mean(CART_TOTAL_Y0), MUDIFF=mean(diffSpend), N=n())
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL_Y1=mean(CART_TOTAL_Y1), MUTOTAL_Y0=mean(CART_TOTAL_Y0), MUDIFF=mean(diffSpend), N=n())
df3_diff %>% gmean(CART_TOTAL_Y1)
df3_diff %>% mean(CART_TOTAL_Y1)
df3_diff %>% mean(CART_TOTAL_Y1)
mean(df3_diff$CART_TOTAL_Y1)
mean(df3_diff$CART_TOTAL_Y0)
amount_made <- 41.1 * 739
amount_spent <- 10000
roi <- (amount_made - amount_spent) / amount_spent
roi * 100
amount_made <- 50.8 * 739
amount_spent <- 10000
roi <- (amount_made - amount_spent) / amount_spent
roi * 100
df3_diff_new <- df3_diff %>% filter(ASSIGNED_DISPLAY_AD == 1)
View(df3_diff_new)
df3_diff_new <- df3_diff %>% filter(ASSIGNED_DISPLAY_AD == 0)
View(df3_diff_new)
df3_diff_new <- df3_diff %>% filter(ASSIGNED_DISPLAY_AD == 0) %>% summarise(s = sum(ATTRIB_DISPLAY_AD))
View(df3_diff_new)
df3_diff_new <- df3_diff %>% filter(ASSIGNED_DISPLAY_AD == 1)
df3_diff_new <- df3_diff %>% filter(ASSIGNED_DISPLAY_AD == 1) %>%
group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL_Y1=mean(CART_TOTAL_Y1), MUTOTAL_Y0=mean(CART_TOTAL_Y0), MUDIFF=mean(diffSpend), N=n())
df3_diff_new <- df3_diff %>% filter(ASSIGNED_DISPLAY_AD == 1)
df3_diff_new <- df3_diff %>% filter(ASSIGNED_DISPLAY_AD == 1)
df3_diff_new %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL_Y1=mean(CART_TOTAL_Y1), MUTOTAL_Y0=mean(CART_TOTAL_Y0), MUDIFF=mean(diffSpend), N=n())
df3_diff %>% group_by(ATTRIB_DISPLAY_AD) %>%
summarise(MUTOTAL_PREV = mean(PREVIOUS_CHECKOUTS))
df3_diff %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(MUTOTAL_PREV = mean(PREVIOUS_CHECKOUTS))
df3_diff %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(SUM_PREV = sum(PREVIOUS_CHECKOUTS))
df3_diff %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(SUM_PREV = sum(PREVIOUS_CHECKOUTS), MEAN_PV = mean(PAGE_VIEWS),
MEAN_INCOME = mean(ESTIMATED_INCOME_DECILE), MEAN_PRODUCT = mean(PRODUCT_VIEWS))
df3_diff %>% group_by(ASSIGNED_DISPLAY_AD & PREVIOUS_CHECKOUTS != 0) %>%
summarise(SUM_PREV = sum(PREVIOUS_CHECKOUTS), MEAN_PV = mean(PAGE_VIEWS),
MEAN_INCOME = mean(ESTIMATED_INCOME_DECILE), MEAN_PRODUCT = mean(PRODUCT_VIEWS))
df3_diff %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(SUM_PREV = sum(PREVIOUS_CHECKOUTS), MEAN_PV = mean(PAGE_VIEWS),
MEAN_INCOME = mean(ESTIMATED_INCOME_DECILE), MEAN_PRODUCT = mean(PRODUCT_VIEWS))
df3_diff %>% filter(PREVIOUS_CHECKOUTS != 0) %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(SUM_PREV = sum(PREVIOUS_CHECKOUTS), MEAN_PV = mean(PAGE_VIEWS),
MEAN_INCOME = mean(ESTIMATED_INCOME_DECILE), MEAN_PRODUCT = mean(PRODUCT_VIEWS))
df3_diff %>% filter(PREVIOUS_CHECKOUTS != 0)
df3_diff %>% filter(PREVIOUS_CHECKOUTS != 0) %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(SUM_PREV = sum(PREVIOUS_CHECKOUTS), MEAN_PV = mean(PAGE_VIEWS),
MEAN_INCOME = mean(ESTIMATED_INCOME_DECILE), MEAN_PRODUCT = mean(PRODUCT_VIEWS))
df3_diff %>% filter(PREVIOUS_CHECKOUTS != 0) %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(MEAN_PREV = mean(PREVIOUS_CHECKOUTS), MEAN_PV = mean(PAGE_VIEWS),
MEAN_INCOME = mean(ESTIMATED_INCOME_DECILE), MEAN_PRODUCT = mean(PRODUCT_VIEWS))
df3_diff %>% filter(PREVIOUS_CHECKOUTS != 0) %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(MEAN_PREV = meanPREVIOUS_CHECKOUTS), MEAN_PV = mean(PAGE_VIEWS),
df3_diff %>% filter(PREVIOUS_CHECKOUTS != 0) %>% group_by(ASSIGNED_DISPLAY_AD) %>%
summarise(MEAN_PREV = mean(PREVIOUS_CHECKOUTS), MEAN_PV = mean(PAGE_VIEWS),
MEAN_INCOME = mean(ESTIMATED_INCOME_DECILE), MEAN_PRODUCT = mean(PRODUCT_VIEWS))
mean(df3_diff$diffSpend)
library(tidyverse)
library(jsonlite)
library(quanteda)
fname <- "/Users/zejiachen/Desktop/fall 2021/QTM385-DataAnalytics-Dataset/VoC/Toys_and_Games_5.json"
con <- file(fname, "r")
mydata <- list()
i <- 1
while (T) {
line <- readLines(con, 1)
line <- jsonlite::fromJSON(line)
mydata[[i]] <- data.frame(
overall = line$overall,
review_time = line$reviewTime,
text = line$reviewText,
sku = line$asin,
reviewer_id = line$reviewerID
)
i <- i + 1
if (i > 2000) {
break
}
}
line
df <- do.call(rbind, mydata) %>%
as_tibble()
View(df)
con <- file(fname, "r")
mydata <- list()
i <- 1
while (T) {
line <- readLines(con, 1)
line <- jsonlite::fromJSON(line)
mydata[[i]] <- data.frame(
overall = line$overall,
review_time = line$reviewTime,
text = line$reviewText,
sku = line$asin,
reviewer_id = line$reviewerID
)
i <- i + 1
if (i > 2000) {
break
}
}
View(mydata)
mydata[[1]]
View(line)
df <- df %>%
mutate(
date = lubridate::mdy(review_time)
) %>%
select(-review_time)
df
df %>%
group_by(overall) %>%
summarize(n=n())
df
con <- file(fname, "r")
mydata <- list()
i <- 1
while (T) {
line <- readLines(con, 1)
line <- jsonlite::fromJSON(line)
mydata[[i]] <- data.frame(
overall = line$overall,
review_time = line$reviewTime,
text = line$reviewText,
sku = line$asin,
reviewer_id = line$reviewerID
)
i <- i + 1
if (i > 2000) {
break
}
}
mydata[[i]] <- data.frame(
overall = line$overall,
review_time = line$reviewTime,
text = line$reviewText,
sku = line$asin,
reviewer_id = line$reviewerID
)
while (T) {
line <- readLines(con, 1)
line <- jsonlite::fromJSON(line)
mydata[[i]] <- data.frame(
overall = line$overall,
review_time = line$reviewTime,
text = line$reviewText,
sku = line$asin,
reviewer_id = line$reviewerID
)
}
